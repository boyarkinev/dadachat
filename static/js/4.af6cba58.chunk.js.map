{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsUser/DialogsUser.module.css","components/Dialogs/Messages/Messages.module.css","components/Dialogs/Messages/MessageInfo/MessageInfo.module.css","components/Dialogs/Messages/Message/Message.module.css","components/Dialogs/DialogsUser/DialogsUser.jsx","components/Dialogs/DialogsUser/DialogsUserContainer.jsx","components/Dialogs/Messages/MessageInfo/MessageInfo.jsx","components/Dialogs/Messages/Message/Message.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Messages/MessagesContainer.jsx","components/Dialogs/MessageTextForm/MessageTextForm.jsx","components/Dialogs/MessageTextForm/MessageTextFormContainer.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogsUser","usersData","map","user","i","name","id","key","className","classes","activeClassName","active","DialogsUserContainer","dialogsPage","users","MessageInfo","date","Message","message","Messages","messagesData","img","avatar","messages","src","alt","userName","MessagesContainer","newMessageText","maxLength","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","reusable","Field","component","Textarea","validate","required","placeholder","textarea","send","submitButton","MessageTextForm","values","addMessage","MessageTextFormContainer","dispatch","action","sendMessageCreator","Dialogs","pageTitle","technicalInfo","dialogs","dialogsUsers","dialogsMessages","formItems","attachment","type","tabIndex","compose","senMessage"],"mappings":"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","file":"static/js/4.af6cba58.chunk.js","sourcesContent":["/*\nЭто пример ХОК - high order component. Он работает так:\n- принимает в себя компонент в качестве аргумента\n- проверяет авторизацию и перенаправляет на страницу авторизации,\nили открывает страницу, если с авторизацией все ок\n*/\n\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to='./login' />;\n      return <Component {...this.props} />;\n    }\n  }\n\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n  return ConnectedAuthRedirectComponent;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsUsers\":\"Dialogs_dialogsUsers__31m0k\",\"dialogsMessages\":\"Dialogs_dialogsMessages__1wokG\",\"formItems\":\"Dialogs_formItems__xIceM\",\"attachment\":\"Dialogs_attachment__BNokd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"DialogsUser_user__3NHn9\",\"active\":\"DialogsUser_active__3yLwc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__xQGJY\",\"avatar\":\"Messages_avatar__2Dts_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"MessageInfo_user__2OD6A\",\"date\":\"MessageInfo_date__2o7cq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2XMh9\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './DialogsUser.module.css';\n\nconst DialogsUser = (props) => {\n  return (\n    <div>\n      {props.usersData.map((user, i) => {\n        return (\n          <li name={user.name} id={user.id} key={i} className={classes.user}>\n            <NavLink\n              to={'/dialogs/' + user.id}\n              activeClassName={classes.active}>\n              {user.name}\n            </NavLink>\n          </li>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default DialogsUser;\n","import { connect } from 'react-redux';\nimport DialogsUser from './DialogsUser';\n\nconst mapStateToProps = (state) => {\n  return {\n    usersData: state.dialogsPage.users,\n  }\n}\n\nconst DialogsUserContainer = connect(mapStateToProps)(DialogsUser);\n\nexport default DialogsUserContainer;\n","import classes from './MessageInfo.module.css';\n\nimport React from 'react';\n\nconst MessageInfo = (props) => {\n  return (\n    <p className={classes.user}>\n      {props.name} <span className={classes.date}>{props.date}</span>\n    </p>\n  );\n};\n\nexport default MessageInfo;\n","import classes from './Message.module.css';\n\nimport React from 'react';\n\nconst Message = (props) => {\n  return <p className={classes.message}>{props.message}</p>;\n};\n\nexport default Message;\n","import classes from './Messages.module.css';\n\nimport React from 'react';\nimport MessageInfo from './MessageInfo/MessageInfo';\nimport Message from './Message/Message';\n\nconst Messages = (props) => {\n  return (\n    <div>\n      {props.messagesData.map((message, i) => {\n        return (\n          <div\n            key={i}\n            img={message.avatar}\n            date={message.date}\n            message={message.message}\n            className={classes.messages}>\n            <img\n              src={message.avatar}\n              className={classes.avatar}\n              alt='User Avatar'\n            />\n            <MessageInfo name={message.userName} date={message.date} />\n            <Message message={message.message} />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Messages;\n","import { connect } from 'react-redux';\nimport Messages from './Messages';\n\nconst mapStateToProps = (state) => {\n  return {\n    messagesData: state.dialogsPage.messagesData,\n    newMessageText: state.dialogsPage.newMessageText,\n  }\n}\n\nconst MessagesContainer = connect(mapStateToProps)(Messages);\n\nexport default MessagesContainer;\n","import reusable from '../../../styles/reusable.module.css';\n\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nimport { Textarea } from '../../commons/FormsControls/FormsControls';\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\n\nconst maxLength = maxLengthCreator(120); \n\nconst MessageTextForm = (props) => {\n\n  const addNewMessage = (values) => {\n    props.addMessage(values.newMessageText);\n  };\n\n  return (\n      <AddMessageFormRedux onSubmit={addNewMessage} />\n  );\n};\nconst addMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit} className={reusable.form}>\n      <Field\n        component={Textarea}\n        validate={[required, maxLength]}\n        name='newMessageText'\n        placeholder='Введите текст'\n        className={reusable.textarea}\n      />\n      <div className={reusable.send}>\n        <button className={reusable.submitButton}>Отправить</button>\n      </div>\n    </form>\n  );\n}\n\nconst AddMessageFormRedux = reduxForm({form: 'dialogMessageTextForm'})(addMessageForm);\n\nexport default MessageTextForm;\n","import { connect } from 'react-redux';\n\nimport { sendMessageCreator } from '../../../redux/dialogs-reducer';\nimport MessageTextForm from './MessageTextForm';\n\nconst mapStateToProps = (state) => {\n  return {\n    messagesData: state.dialogsPage.messagesData,\n    newMessageText: state.dialogsPage.newMessageText,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addMessage: (newMessageText) => {\n      const action = sendMessageCreator(newMessageText)\n      dispatch(action);\n    },\n  }\n}\n\nconst MessageTextFormContainer = connect(mapStateToProps, mapDispatchToProps)(MessageTextForm);\n\nexport default MessageTextFormContainer;\n","import classes from './Dialogs.module.css';\nimport reusable from '../../styles/reusable.module.css';\n\nimport React from 'react';\n\nimport DialogsUserContainer from './DialogsUser/DialogsUserContainer';\nimport MessagesContainer from './Messages/MessagesContainer';\nimport MessageTextFormContainer from './MessageTextForm/MessageTextFormContainer';\n\nconst Dialogs = () => {\n\n  return (\n    <div>\n      <h2 className={reusable.pageTitle}>Мои диалоги</h2>\n      <p className={reusable.technicalInfo}>[ Страница в доработке ]</p>\n      <div className={classes.dialogs}>\n        <ul className={classes.dialogsUsers}>\n          <DialogsUserContainer />\n        </ul>\n        <div className={classes.dialogsMessages}>\n          <div>\n            <MessagesContainer />\n          </div>\n          <div className={classes.formItems}>\n            <div className={classes.attachment}>\n              <label>\n                <input type={'file'} />\n                <span tabIndex={'0'}></span>\n              </label>\n            </div>\n            <MessageTextFormContainer />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;\n","import { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nimport Dialogs from './Dialogs';\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\n\nconst mapStateToProps = (state) => ({\n  dialogsPage: state.dialogsPage,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    senMessage: () => {\n      dispatch(sendMessageCreator());\n    },\n  };\n};\n\nexport default compose(\n  connect( mapStateToProps, mapDispatchToProps ),\n  withAuthRedirect\n)(Dialogs);\n/*\nКак работает compose:\n1. Берет Dialogs и перекидывает на обработку в withAuthRedirect\n2. withAuthRedirect отдает результат, который compose передает в connect\n*/\n"],"sourceRoot":""}