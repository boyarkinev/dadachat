{"version":3,"sources":["hoc/withAuthRedirect.js","img/userpic.svg","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileHeader/ProfileHeader.module.css","img/cover_pic_elem_1.svg","img/cover_pic_elem_2.svg","img/cover_pic_elem_3.svg","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileHeader/ProfileHeader.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","onChange","e","currentTarget","value","autoFocus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","reusable","submitButton","styleError","formSummaryError","classes","user_info","createField","Input","type","Textarea","Object","keys","contacts","map","key","ProfileData","isOwner","goToEditMode","onClick","ProfileInfo","savePhoto","saveProfile","preloaderContainer","Preloader","user","user_pic","fileUpload","data-tip","id","event","target","files","length","tabIndex","uploadFileClip","src","photos","large","AvatarPlug","alt","user_data","pageTitle","fullName","user_status","initialValues","formData","then","Post","post","avatar","message","likes","like","active","counter","maxLength","maxLengthCreator","MyPosts","memo","postsElements","postsData","i","likesCounter","posts","AddNewPostFormRedux","values","addPost","newPostText","Field","component","validate","required","name","placeholder","textarea","send","MyPostsContainer","profilePage","dispatch","action","addPostActionCreator","ProfileHeader","cover","pic","coverPicElemTwo","coverPicElemOne","picabsolute","coverPicElemThree","Profile","content","ProfileContainer","userId","match","params","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.e369bc64.chunk.js","sourcesContent":["/*\nЭто пример ХОК - high order component. Он работает так:\n- принимает в себя компонент в качестве аргумента\n- проверяет авторизацию и перенаправляет на страницу авторизации,\nили открывает страницу, если с авторизацией все ок\n*/\n\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to='./login' />;\n      return <Component {...this.props} />;\n    }\n  }\n\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n  return ConnectedAuthRedirectComponent;\n};\n","module.exports = __webpack_public_path__ + \"static/media/userpic.e9fbda13.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"ProfileInfo_user__2OeU5\",\"user_pic\":\"ProfileInfo_user_pic__3GLQa\",\"user_data\":\"ProfileInfo_user_data__1SB4C\",\"user_name\":\"ProfileInfo_user_name__1OkMX\",\"user_status\":\"ProfileInfo_user_status__25Ek7\",\"user_info\":\"ProfileInfo_user_info__1w3hO\",\"preloaderContainer\":\"ProfileInfo_preloaderContainer__VMQ6B\",\"fileUpload\":\"ProfileInfo_fileUpload__2Ummu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2wLDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\",\"avatar\":\"Post_avatar__1wBwP\",\"message\":\"Post_message__3raFK\",\"likes\":\"Post_likes__2o7Hq\",\"like\":\"Post_like__oViQh\",\"active\":\"Post_active__1HCRI\",\"counter\":\"Post_counter__14HCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"ProfileHeader_cover__1Z9rw\",\"pic\":\"ProfileHeader_pic__rIJFQ\",\"picabsolute\":\"ProfileHeader_picabsolute__2FRt7\"};","module.exports = __webpack_public_path__ + \"static/media/cover_pic_elem_1.cc571328.svg\";","module.exports = __webpack_public_path__ + \"static/media/cover_pic_elem_2.58541e94.svg\";","module.exports = __webpack_public_path__ + \"static/media/cover_pic_elem_3.0c2b72f2.svg\";","import React, {useEffect, useState} from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status)\n  }, [props.status])\n  \n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false)\n    props.updateStatus(status)\n  }\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  }\n\n  return (\n    <>\n      {!editMode && (\n        <span onDoubleClick={activateEditMode}>\n          {props.status || '----------'}\n        </span>\n      )}\n      {editMode && (\n        <input\n          onBlur={deactivateEditMode}\n          onChange={onStatusChange}\n          autoFocus={true}\n          value={status}></input>\n      )}\n    </>\n  );\n}\n\nexport default ProfileStatusWithHooks;","import classes from './ProfileInfo.module.css';\nimport reusable from '../../../styles/reusable.module.css';\n\nimport React from 'react';\nimport { reduxForm } from 'redux-form';\n\nimport styleError from '../../commons/FormsControls/FormsControls.module.css';\nimport {\n  createField,\n  Input,\n  Textarea,\n} from '../../commons/FormsControls/FormsControls';\n\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <button className={reusable.submitButton}>Сохранить</button>\n      {error && <div className={styleError.formSummaryError}>{error}</div>}\n      <div className={classes.user_info}>\n        Имя: {createField('Имя', 'fullName', [], Input)}\n      </div>\n      <div className={classes.user_info}>\n        В поисках работы:{' '}\n        {createField('', 'lookingForAJob', [], Input, null, {\n          type: 'checkbox',\n        })}\n      </div>\n      <div className={classes.user_info}>\n        Мой стек:{' '}\n        {createField('Мой стек', 'lookingForAJobDescription', [], Textarea)}\n      </div>\n      <div className={classes.user_info}>\n        Обо мне: {createField('Обо мне', 'aboutMe', [], Textarea)}\n      </div>\n\n      <div className={classes.user_info}>\n        Контакты:{' '}\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <div key={key}>\n              {key}: {createField(key, 'contacts.' + key, [], Input)}\n            </div>\n          );\n        })}\n      </div>\n    </form>\n  );\n};\n\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm);\n\nexport default ProfileDataFormReduxForm;\n","import classes from './ProfileInfo.module.css';\nimport reusable from '../../../styles/reusable.module.css';\n\nimport React, { useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nimport Preloader from '../../commons/Preloader/Preloader';\nimport AvatarPlug from '../../../img/userpic.svg';\nimport ProfileStatusWithHooks from '../ProfileStatus/ProfileStatusWithHooks';\nimport ProfileDataForm from './ProfileDataForm';\n\nconst ProfileInfo = ({\n  profile,\n  status,\n  updateStatus,\n  isOwner,\n  savePhoto,\n  saveProfile,\n}) => {\n  const [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return (\n      <div className={classes.preloaderContainer}>\n        <Preloader />\n      </div>\n    );\n  }\n\n  const onMainPhotoSelected = (event) => {\n    if (event.target.files.length) {\n      savePhoto(event.target.files[0]);\n    }\n  };\n\n  const onSubmit = (formData) => {\n    saveProfile(formData).then(() => {\n      setEditMode(false);\n    }) \n  };\n\n  return (\n    <div>\n      <div className={classes.user}>\n        <div className={classes.user_pic}>\n          <div>\n            {isOwner && (\n              <div className={classes.fileUpload} data-tip={'Изменить фото'}>\n                <label>\n                  <input\n                    type={'file'}\n                    id={'uploadFile'}\n                    onChange={onMainPhotoSelected}\n                  />\n                  <span tabIndex={'0'}></span>\n                </label>\n              </div>\n            )}\n            <div className={classes.uploadFileClip}></div>\n          </div>\n          <img src={profile.photos.large || AvatarPlug} alt='Avatar' />\n        </div>\n        <div className={classes.user_data}>\n          <h2 className={reusable.pageTitle}>{profile.fullName}</h2>\n          <p\n            className={classes.user_status}\n            data-tip={'Двойной щелчок для редактирования'}>\n            <ProfileStatusWithHooks\n              status={status}\n              updateStatus={updateStatus}\n            />\n          </p>\n          {editMode\n            ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\n            : <ProfileData goToEditMode={() => setEditMode(true)} profile={profile} isOwner={isOwner} />\n          }\n        </div>\n        <ReactTooltip />\n      </div>\n    </div>\n  );\n};\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n  return (\n    <div>\n      {isOwner && <button onClick={goToEditMode} className={reusable.submitButton}>Редактировать</button>}\n      {/* <p className={classes.user_info}>Имя: {profile.fullName}</p> */}\n      {/* <p className={classes.user_info}>\n        В поисках работы: {profile.lookingForAJob ? 'Да' : 'Нет'}\n      </p> */}\n      {/* {profile.lookingForAJob && (\n        <p className={classes.user_info}>\n          Мой стек: {profile.lookingForAJobDescription}\n        </p>\n      )}\n      <p className={classes.user_info}>Обо мне: {profile.aboutMe}</p> */}\n      {/* <div className={classes.user_info}>\n        Контакты:{' '}\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <Contact\n              key={key}\n              contactTitle={key}\n              contactValue={profile.contacts[key]}\n            />\n          );\n        })}\n      </div> */}\n    </div>\n  );\n};\n\n// const Contact = ({ contactTitle, contactValue }) => {\n//   return (\n//     <p className={classes.user_info}>\n//       {contactTitle}: {contactValue}\n//     </p>\n//   );\n// };\n\nexport default ProfileInfo;\n","import React from 'react';\nimport classes from './Post.module.css';\nimport AvatarPlug from '../../../../img/userpic.svg';\n\nconst Post = (props) => {\n  return (\n    <div className={classes.post}>\n      <img\n        src={AvatarPlug}\n        className={classes.avatar}\n        alt='Guest Avatar'\n      />\n      <p className={classes.message}>{ props.message }</p>\n      <div className={classes.likes}>\n        <div className={`${classes.like} ${classes.active}`}></div>\n        <p className={classes.counter}>{ props.counter }</p>\n      </div>\n    </div> \n  ); \n};\n\nexport default Post;\n","import classes from './MyPosts.module.css';\nimport reusable from '../../../styles/reusable.module.css';\n\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nimport Post from './Post/Post';\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\nimport { Textarea } from '../../commons/FormsControls/FormsControls';\n\nconst maxLength = maxLengthCreator(120);\n\nconst MyPosts = React.memo(props => {\n\n  const onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n  \n  const postsElements = props.postsData.map((post, i) => (\n    <Post message={post.message} counter={post.likesCounter} key={i} />\n  ));\n\n  return (\n    <div className={classes.posts}>\n      <h2 className={reusable.pageTitle}>Мои посты</h2>\n\n      <AddNewPostFormRedux onSubmit={onAddPost} className={reusable.form} />\n      \n      { postsElements }\n    </div>\n  );\n});\n\nconst AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit} className={reusable.form}>\n      <Field\n        component = {Textarea}\n        validate={[required, maxLength]}\n        name=\"newPostText\"\n        placeholder=\"Введите текст\"\n        className={reusable.textarea}\n      />\n      <div className={reusable.send}>\n        <button className={reusable.submitButton}>Отправить</button>\n      </div>\n    </form>\n  );\n}\n\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\n\nexport default MyPosts;\n","import { connect } from 'react-redux';\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\n\nconst mapStateToProps = (state) => {\n  return {\n    postsData: state.profilePage.postsData,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      const action = addPostActionCreator(newPostText)\n      dispatch(action);\n    },\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React from 'react';\nimport classes from './ProfileHeader.module.css'\nimport coverPicElemOne from '../../../img/cover_pic_elem_1.svg'\nimport coverPicElemTwo from '../../../img/cover_pic_elem_2.svg'\nimport coverPicElemThree from '../../../img/cover_pic_elem_3.svg'\n\nconst ProfileHeader = () => {\n  return (\n    <div className={classes.cover}>\n      <img className={classes.pic} src={coverPicElemTwo} alt='Cover' />\n      <img className={classes.pic} src={coverPicElemOne} alt='Cover' />\n      <img className={classes.picabsolute} src={coverPicElemThree} alt='Cover'\n      />\n    </div>\n  );\n};\n\nexport default ProfileHeader;\n","import React from 'react';\nimport classes from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileHeader from './ProfileHeader/ProfileHeader';\n\nconst Profile = ({profile, status, updateStatus, isOwner, saveProfile, savePhoto}) => {\n\n  return (\n    <div className={classes.content}>\n      <ProfileHeader />\n      <ProfileInfo\n        isOwner={isOwner}\n        profile={profile}\n        status={status}\n        updateStatus={updateStatus}\n        saveProfile={saveProfile}\n        savePhoto={savePhoto}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Profile from './Profile';\nimport { getUserProfile, getStatus, updateStatus, saveProfile, savePhoto } from './../../redux/profile-reducer';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\n\nclass ProfileContainer extends React.Component {\n  \n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return (\n      <Profile {...this.props}\n        isOwner={!this.props.match.params.userId}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n        savePhoto={this.props.savePhoto}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer)\n/*\nКак работает compose:\n1. Берет Dialogs и перекидывает на обработку в withAuthRedirect\n2. withAuthRedirect отдает результат, который compose передает в withRouter\n3. Из withRouter результат передается в connect\n*/\n"],"sourceRoot":""}